{% set hasErrors = errors.has(field.name) %}

{% block init %}{% endblock %}

<div class="helium-field w-full {{ hasErrors ? 'invalid' }}">

    {% block label %}
        {% include "helium::form-fields.common.label" %}
    {% endblock %}

    {% block description %}
        {% include "helium::form-fields.common.description" %}
    {% endblock %}

    {% block container %}
        <div class="helium-field-container w-full py-2 px-3 border rounded-lg flex flex-wrap bg-white
            focus-within:border-blue-700
            {{ hasErrors ? 'border-red-700' : 'border-gray-400' }}
            {{ field.containerClasses }}"
        >
            {% block input %}
                {% if field.prefix is not empty %}
                    <span class="mr-2 text-gray-400">{{ field.prefix|raw }}</span>
                {% endif %}

                <input class="w-full flex-1 {{ field.classes }} focus:outline-none"
                    type="{{ field.type }}"
                    name="{{ field.name }}"
                    id="{{ field.id }}"
                    value="{{ input_old(field.name, field.value|resolve(entry)) }}"
                    placeholder="{{ field.placeholder }}"
                    autocomplete="{{ field.autocomplete }}"
                    {% for attribute in field.attributes %}
                        {{ attribute.name }}{{ (attribute.value is defined ? '="' ~ attribute.value|escape ~ '"')|raw }}
                    {% endfor %}
                >
                {% if field.postfix is not empty %}
                    <span class="ml-2 text-gray-400">{{ field.postfix|raw }}</span>
                {% endif %}
            {% endblock %}
        </div>
    {% endblock %}

    {% block errors %}
        {% include "helium::form-fields.common.errors" %}
    {% endblock %}

</div>
