{% extends "helium::form-fields.input" %}
{% block container %}
    <div class="{{ field.containerClasses }}">
        <select class="box-border inline-block w-full px-2 py-2.5 bg-white border rounded-lg
            focus:outline-none focus:border-blue-700
            {{ hasErrors ? 'border-red-700' : 'border-gray-400' }}
            {{ field.classes }}"
            name="{{ field_name }}"
            id="{{ field_id }}"
            {% for attribute in field.attributes %}
                {{ attribute.name }}{{ (attribute.value is defined ? '="' ~ attribute.value|escape ~ '"')|raw }}
            {% endfor %}
        >
            {% if field.placeholder is not empty %}
                <option value="">{{ field.placeholder }}</option>
            {% endif %}

            {% for value,name in field.options|options(entry, field) %}
                <option value="{{ value }}"
                    {{ (input_old(field_data_key, field.getExistingValue(entry)) == value) ? 'selected' }}
                >{{ name }}</option>
            {% endfor %}
        </select>
    </div>
{% endblock %}
